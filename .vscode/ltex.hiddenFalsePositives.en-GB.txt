{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QGiven I'm just running locally and the security plugin takes some extra setup, I just went with the dev docker-compose file.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QIf you just want to explore the things OpenSearch can do, at this point you can open up dashboard, press the home button on the left-hand side, press \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and it should give you a choice to add some sample data to play around with:\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QAdditionally, while .\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet 7 is out, after being burnt by .\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QNet 7 is out, after being burnt by .\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet Core 3.0 announcing end-of-life a few days before it happened, I pretty much always work with the long term support version if I can help it, so I went with .\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QNet Core 3.0 announcing end-of-life a few days before it happened, I pretty much always work with the long term support version if I can help it, so I went with .\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet 6.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QWhile I'm using C# and .\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet 6, this tool has a pretty large list of supported languages, so if you wanted to code something similar, you could absolutely use your language of choice, rather than C#.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QAfter you run this command, go to the output directory, then into src and you should see 2 C# projects:\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QWhen I was doing this, there were a few values in the Articles Response that are marked as required, but I didn't get them back, so did need to modify the generated code very slightly to remove the IsRequired attribute from a few Articles model.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Q{% katex %} {1 + 4  + 16 \\over 3} = 7 {% endkatex %}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q{% katex %} {1 + 4  + 16 \\over 3} = 7 {% endkatex %}\\E$"}
{"rule":"MISSING_HYPHEN","sentence":"^\\QNow as this is close to 8 hours, I'd then just round up to a full 8 hour day as that's close enough.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Q{% katex %} 8 \\times 1.2 =  9.6 {% endkatex %}\\E$"}
{"rule":"YOUR_NN","sentence":"^\\QIf this is happening to you, trust me it's going to be far less awkward to explain now, than when you have to tell the same people pressuring you it's going to take longer than you said\nBe honest with yourself\nIf you're throwing out estimates that you think may be possible, but have historically taken you a lot longer (as well as constantly having to explain to the project manager why it's taking longer), it's probably a good idea to take a look at you're estimation process.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QIf I've not got a .gitignore (because I couldn't be bothered to search usually!)\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QIf I've not got a .gitignore (because I couldn't be bothered to search usually!)\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QI add an empty .gitignore ready for me.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QI add an empty .gitignore ready for me.\\E$"}
{"rule":"A_RB_NN","sentence":"^\\QAlso, as this is a primarily markup repository, I also added a linting tool called markdownlint.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QFor reference, here's what the .pre-commit-config.yaml looks like for this repo\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QMarkdown Preview Enhanced\nMainly so I can get the markdown preview to not be in dark mode, like it's probably going to be viewed in\nMarkdown All in One\nProvides an easier way to format markdown\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QMarkdown Preview Enhanced\nThis is so I can get the markdown preview to not be in dark mode, like it's probably going to be viewed in\nMarkdown All in One\nProvides an easier way to format Markdown\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\QAs it's just starting out, and I'm definitely going to be below the 500MB limit GitHub gives you for a basic repository.\\E$"}
{"rule":"SETUP_VERB","sentence":"^\\QDev.to setup\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QAt this point, you've hopefully written your article and we're pretty much done with the git side so you can close the 200 windows you have open explaining how to style markup.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QIt's really quite straightforward and I've got the below github actions yaml file to publish it\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QIt's really quite straightforward and I've got the below GitHub actions yaml file to publish it\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QIt's really quite straightforward and I've got the below GitHub actions YAML file to publish it\\E$"}
{"rule":"GIT_GET","sentence":"^\\QWhen I want it added to Git, I just move the file into a folder at the same level, and all the images work automatically\\E$"}
{"rule":"GIT_GET","sentence":"^\\QWhen I want it added to Git, I just move the file into a folder at the same level, and all the images work automatically\nI've swapped away from using the SpellChecker tool to using LTeX because of the additional grammar checking.\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\QGitHub allows a maximum of 100MB per file before they block you\nBased on this answer from Stack Overflow, the \"hard limit\" for the size of a repository in GitHub is 100GB, but really should be kept under 5GB (and preferably 1GB) - it's a little difficult to find information on this though\nGitHub lets you have an unlimited number of repositories\nThere's an endpoint that lets you setup a GitHub repository programmatically\nzip and tar files both have the ability to easily be split apart\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\QGitHub allows a maximum of 100MB per file before they block you\nBased on this answer from Stack Overflow, the \"hard limit\" for the size of a repository in GitHub is 100GB, but really should be kept under 5GB (and preferably 1GB) - it's a little difficult to find information on this though\nGitHub lets you have an unlimited number of repositories\nThere's an endpoint that lets you set up a GitHub repository programmatically\nzip and tar files both have the ability to easily be split apart\\E$"}
{"rule":"A_INSTALL","sentence":"^\\QThe point of these programs is to vastly simplify the install process\\E$"}
{"rule":"MOST_COMPARATIVE","sentence":"^\\QMost larger, more traditional languages have\\E$"}
{"rule":"GOT_GOTTEN","sentence":"^\\QI know this sounds extremely obvious, but the choice of browser can actually be really important as (while this has gotten a lot better recently) different web browser's can render content differently (who else remembers the dreaded this website only runs on Internet Explorer).\\E$"}
{"rule":"SOME_OF_THE","sentence":"^\\QReally, there's far too many tools in this pack to go into any real detail, but some of the highlights are Process explorer, which is a more powerful version of\\E$"}
{"rule":"SOME_OF_THE","sentence":"^\\QReally, there's far too many tools in this pack to go into any real detail, but some of the highlights are Process explorer (a more powerful version of task manager), syslog and process monintor (both used to monitor logs in Windows - very useful for diagnosing issues with services!)\\E$"}
{"rule":"SOME_OF_THE","sentence":"^\\QReally, there's far too many tools in this pack to go into any real detail, but some of the highlights are Process explorer (a more powerful version of task manager), syslog and process monitor (both used to monitor logs in Windows - very useful for diagnosing issues with services!).\\E$"}
{"rule":"SOME_OF_THE","sentence":"^\\QSome of the highlights within the monitoring tools are process explorer (a more powerful version of task manager), syslog and process monitor (both used to monitor logs in Windows - very useful for diagnosing issues with services!).\\E$"}
{"rule":"BEEN_PART_AGREEMENT","sentence":"^\\QOnly thing I'd say though, is be mindful of if you have to work around other people as a loud keyboard can be extremely distracting.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QFor example, C# has liquid tags support for DotNetFiddle.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QWhile I've found writing these diagrams does take longer than using something like draw.io (which is also written in JavaScript) it does entirely do away with manual formatting of a diagram, which can be the hardest thing to do when writing a diagram.\\E$"}
{"rule":"YOUTUBE","sentence":"^\\Q{% youtube WTUafAwrunE %}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q{% youtube WTUafAwrunE %}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q{% endspoiler %}\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q{% vimeo https://player.vimeo.com/video/817732765?h=41bff7236b %}\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThis is because the default of a dictionary is to throw an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q if\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThis is because the default of a dictionary is to throw an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q if the method does not return positively.\\E$"}
{"rule":"EXTREME_ADJECTIVES","sentence":"^\\QThere's a really good in-depth article found here around how a concurrent dictionary works, but essentially it's a dictionary that's designed to run safely across multiple threads (as described by the \"concurrent\" part).\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet showing that a frozen implementation of hash set was over twice as quick to get a value, as compared to a regular hash set.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QThere's a comment here on the GitHub repository for .\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet showing that a frozen implementation of hash set was over twice as quick to get a value, as compared to a regular hash set.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet\nThis\nEntity Framework Core\nCommon C# ORM used to link objects in code to the SQLite database\nOne of the nice things about this implementation, is that I can call EnsureCreated() to create a database if it doesn't already exist\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\QCommandLineParser\nCreates better syntax structures for command line arguments, such as -b for --backup\nDotNetZip\nPopular library for working with zip files in .\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\QNet\nThis library was chosen as it has support for splitting files\nLibGit2Sharp\nIt's a library for working with Git in C#\nEntity Framework Core\nCommon C# ORM used to link objects in code to the SQLite database\nOne of the nice things about this implementation, is that I can call EnsureCreated() to create a database if it doesn't already exist\nSerilog\nExcellent logging tool\nTestableIO.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QSystem.IO.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QAbstractions\nThis library creates abstract version of System.IO which makes them far more testable\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QNet\nThis library was chosen as it has support for splitting files\nLibGit2Sharp\nIt's a library for working with Git in C#\nEntity Framework Core\nCommon C# ORM used to link objects in code to the SQLite database\nOne of the nice things about this implementation, is that I can call EnsureCreated() to create a database if it doesn't already exist\nSerilog\nExcellent logging tool\nTestableIO.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_GB","sentence":"^\\Q{% vimeo https://vimeo.com/824184559 %}\\E$"}
{"rule":"ADMIT_ENJOY_VB","sentence":"^\\QIn fact, it's generally recommended to provide collections to users than lists but reality this rarely happens as lists work in 99.99% of use cases and it's far more likely to need access to sort and search for data\\E$"}
{"rule":"ADMIT_ENJOY_VB","sentence":"^\\QIn fact, it's generally recommended to provide collections to users than lists but reality this rarely happens as lists work in 99.99% of use cases, and it's far more likely to need access to sort and search for data\\E$"}
{"rule":"ADMIT_ENJOY_VB","sentence":"^\\QIn fact, it's generally recommended to provide collections to users than lists but reality this rarely happens as lists work in 99.99% of use cases.\\E$"}
{"rule":"ADMIT_ENJOY_VB","sentence":"^\\QIn fact, it's generally recommended to provide collections to users rather than lists but reality this rarely happens as lists work in 99.99% of use cases.\\E$"}
{"rule":"ADMIT_ENJOY_VB","sentence":"^\\QIn fact, it's generally recommended to provide collections to users rather than lists, but reality this rarely happens as lists work in 99.99% of use cases.\\E$"}
{"rule":"SENTENCE_WHITESPACE","sentence":"^\\QCollection namespace or a \"collection\" which can include essentially anything that can be described as \"a collection of objects\".\\E$"}
{"rule":"LARGE_NUMBER_OF","sentence":"^\\QYou can see it just generates a large number of files in the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q folder.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QAt this point, if you run \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q you should see a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q folder created that contains an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which is the entry point for the static site:\\E$"}
{"rule":"HAVE_PART_AGREEMENT","sentence":"^\\QFor example AWS has Amplify, Google has Firebase and Azure has identity platform.\\E$"}
{"rule":"HAVE_PART_AGREEMENT","sentence":"^\\QFor example, AWS has Amplify, GCP has Firebase and Azure has Identity Platform.\\E$"}
{"rule":"HAVE_PART_AGREEMENT","sentence":"^\\QFor example, AWS has Amplify, GCP has Firebase and Azure has Identity.\\E$"}
{"rule":"WANT_TO_NN","sentence":"^\\QGiven I want to unit test all of my code, what I tend to do is try and group my test projects with my \"real\" code.\\E$"}
{"rule":"PER_USER_BASIS_HYPHEN","sentence":"^\\QIf this was to change on a per test basis, I could either con\\E$"}
{"rule":"PER_USER_BASIS_HYPHEN","sentence":"^\\QIf this was to change on a per test basis, I could either construct this object in the test itself, or use a setup method that's run before every test.\\E$"}
